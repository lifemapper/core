THIS FILE IS OUT OF DATE





Lifemapper lmCompute - Version 2.0
Installation guide for the Lifemapper compute platform

Status: obsolete

-------------------------------------------------------------------------------
1. Introduction
2. Prerequisites
  2.1. Lifemapper client
  2.2. openModeller Plugin
  2.3. Maximum Entropy Plugin
  2.4. GBIF Plugin
  2.5. Lifemapper RAD Intersect Plugin
  2.6. Lifemapper RAD Randomize Plugin
3. Code Installation
  3.1. Single machine installation
  3.2. Cluster Installation 
4. Configuration
  4.1. Job Submitter Configuration
    4.1.1. Setting up your environment
    4.1.2. The node configuration file
    4.1.3. The job submitter configuration file
  4.2. Node Configuration
-------------------------------------------------------------------------------

  1. Introduction
  ===============
  
This document is the installation guide for the Lifemapper job computational 
engine.  Lifemapper is subject to the GNU General Public License - Version 2.
All hardware and software referenced are subject to their respective licenses.

The details in this document are believed to be correct.  If you find any 
errors or omissions, please let us know at lifemapper@ku.edu.
  
  2. Prerequisites
  ================
  
The Lifemapper lmCompute package is distributed with three plugins to run 
openModeller and Maximum Entropy species distribution models.  If we release
additional plugins, they may have their own set of prerequisites.

     2.1. Lifemapper
     ===============
The Lifemapper compute client itself requires Python, GDAL, SQLite3, 
     
     2.2. openModeller Plugin
     ========================
The Lifemapper openModeller plugin requires that openModeller be installed.  
Please refer to the openModeller documentation at: 
http://openmodeller.sourceforge.net
     
     2.3. Maximum Entropy Plugin
     ===========================
The Lifemapper Maximum Entropy plugin uses the Maxent software from: 
http://www.cs.princeton.edu/~schapire/maxent/.  Download the Maxent jar file 
and link it from your Lifemapper apps directory.  Java is required to run 
Maxent jobs.
  
     2.4. GBIF Plugin
     ================
The Lifemapper GBIF plugin requires that GDAL be installed and configured for 
Python.

     2.5. Lifemapper RAD Intersect Plugin (not included by default)
     ==============================================================
The Lifemapper Range and Diversity Intersect plugin requires the Python 
libraries Rtree (https://pypi.python.org/pypi/Rtree/), 
NumPy (http://www.numpy.org/), and GDAL (http://www.gdal.org/) (compiled with 
OSR) to be installed

     2.6. Lifemapper RAD Randomize Plugin (not included by default)
     ==============================================================
The Lifemapper Range and Diversity Randomize plugin requires the Python 
libraries NumPy (http://www.numpy.org/) and PySAL 
(https://geodacenter.asu.edu/projects/pysal) to be installed.

  3. Code Installation
  ====================
  
     3.1. Single Machine Installation
     ================================
These instructions will assume that the Lifemapper LmCompute module will be 
downloaded into a devenv directory in the user's home directory and it will be 
installed in /var/lm.  We will put the data and jobs directories in /var/lm as 
well but those can be moved to an alternate location (maybe with a larger disk)

First, set up directories (provide root privileges where needed)
{{{
$ mkdir ~/devenv
$ mkdir /var/lm/
$ mkdir /var/lm/apps
$ mkdir /var/lm/config
$ mkdir /var/lm/data
$ mkdir /var/lm/data/layers
$ mkdir /var/lm/jobs
$ mkdir /var/lm/temp
$ mkdir /var/lm/metrics
}}}

Download the code to your development directory
{{{
$ cd ~/devenv
$ git clone https://github.com/lifemapper/LmCompute
}}}

Copy the src directory to /var/lm/LmCompute
{{{
$ cp -r ~/devenv/LmCompute/src /var/lm/LmCompute
}}}

Build binaries in /var/lm/apps or create symbolic links to them from that directory
 Include:
  * om_model
  * om_project
  * maxent.jar

Link to scripts directory
{{{
$ cd /var/lm
$ ln -s LmCompute/scripts
}}}

    
     3.2. Cluster Installation
     =========================
For cluster installations, you will follow the same installation instructions
that apply for the single machine installation for the most part, but they will
only apply to the compute nodes.  After you set up your nodes, you will need to 
install the Lifemapper code on the head node of your cluster as well (or 
whatever node that will be submitting jobs) and then you will need to configure
your job submitter (section 4.3) for your particular environment.
  
  4. Configuration
  ================
  
     4.1. Setting up your environment
     ==================================

The first step of the configuration is to set your environment variables.  These
can be placed in your .bashrc file, /etc/profile, etc

Make sure that the following variables point to the proper location in your 
environment

The following example assumes that this is a cluster installation and the 
frontend has the code installed in /var/lm/ and the nodes have code installed 
in /opt/lifemapper/

LM_NODE_CODE_LOCATION - This is the location of the Lifemapper Python code for 
                           the machine(s) that will perform computations (local 
                           machine for single machine setup, nodes for clusters)
LM_SCRIPTS_PATH - This is the location of helpful Lifemapper scripts
NODE_PYTHON - This is the path to the Python executable for the machine(s) that 
                 will perform computations
PYTHON - This is the path to the Python executable for the local machine
PYTHONPATH - This should include the path to the Lifemapper computational code.  
                The example includes both the paths for the local machine and 
                nodes

{{{
# Lifemapper frontend environment variables
export LM_NODE_CODE_LOCATION=/opt/lifemapper/lm/LmCompute/
export LM_SCRIPTS_PATH=/var/lm/scripts/
export NODE_PYTHON=/opt/python/bin/python
export PYTHON=/opt/python/bin/python
export PYTHONPATH=/var/lm/LmCompute:/opt/lifemapper/lm/LmCompute
}}}

     4.2. The configuration file
     ===========================

Each node (or local machine for single machine setups) has a configuration file 
that tells the Lifemapper LmCompute code how it should run, where it should 
store files, etc.  
Now, edit this file with your favorite text editor.  Use the CONFIG_HELP file 
for an explanation of what each variable is and how it should be set.

