# .............................................................................
## TODO: simplify structure to the following:
##       {<fieldname or columnIndex>: {
##                      name: <shortname>, 
##                      type: <type>, 
##                      acceptedvalues: [<val1>, <val2>, ...]
##                      },
##        ...
##       {<fieldrole>: shortname or column index, 
##        ...
##        }
##   name required,
##   type required, 
##   acceptedvalues optional, 
##   keys for each field dictionary are case-insensitive
# .............................................................................
# Note: This file must have the same basename as the CSV file it describes
# Note: Field names MUST BE in the first row of the CSV data file
# 
# This file must contain a Python dictionary with:
#     Key = field name or column index) 
#            or field role
#     Value = if field heading, tuple: Shortname, Type [, AcceptedValues])
#             if field role, string: one of the existing field headings
# 
# Shortname must be 10 characters or fewer and will be used in the shapefile 
#   created for each dataset.  
# Type must be integer, string, or real
# AcceptedValues optional) is a list of accepted values for this field.  
#   Records with non-accepted values will be discarded.
#
# Key field role case-insensitive) MUST identify four or five of the fields: 
#   UniqueID, Longitude, Latitude, GroupBy, TaxaName 
#     UniqueID is the OPTIONAL string or integer field containing a unique ID 
#         for each record. Values will be generated if missing.
#     Longitude is the field with the x coordinate
#     Latitude is the field with the y coordinate
#     GroupBy is the field identifying which value to group records by
#         records in the CSV file should be grouped on this field)
#     TaxaName is the field containing the taxa name for the recordset
#         if records for a dataset have different values, the first record will
#          determine the dataset name)
# .............................................................................

  # Field names
  gbifid: gbifid, integer
  datasetkey: datasetkey, string 
  occurrenceid: occurid, string
  kingdom: kingdom, string
  phylum: phylum, string
  class: class, string
  order: order, string
  family: family, string
  genus: genus, string
  species: species, string
  infraspecificepithet: isepithet, string 
  taxonrank: taxonrank, string, [SUBSPECIES, SPECIES]
  scientificname: sciname, string
  countrycode: cntrycode, string
  locality: locality, string
  publishingorgkey: puborgkey, string
  decimallatitude: dec_lat, real
  decimallongitude: dec_long, real
  elevation: elevation, real
  elevationaccuracy: elev_acc, real
  depth: depth, real
  depthaccuracy: depth_acc, real
  eventdate: eventdate, string
  day: day, integer
  month: month, integer
  year: year, integer
  taxonkey: taxonkey, integer
  specieskey: specieskey, integer
  basisofrecord: basisofrec, string
  institutioncode: inst_code, string
  collectioncode: coll_code, string
  catalognumber: catnum, string
  recordnumber: recnum, string
  identifiedby: idby, string
  rights: rights, string
  rightsholder: rightshold, string
  recordedby: rec_by, string
  typestatus: typestatus, string
  establishmentmeans: estabmeans, string
  lastinterpreted: lastinterp, string
  mediatype: mediatype, string
  issue: issue, string
  
  # Field roles
  UniqueID: gbifid
  Longitude: decimallongitude
  Latitude: decimallatitude
  GroupBy: taxonkey
  TaxaName: species 

