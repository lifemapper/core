<?xml version="1.0"?>
<application
    xmlns="http://wadl.dev.java.net/2009/02" 
    xmlns:lm="http://lifemapper.org"
    xmlns:xhtml="http://www.w3.org/1999/xhtml" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://wadl.dev.java.net/2009/02 wadl.xsd">

   <!-- Parameters -->
   <param name="afterTime" 
          required="false" 
          style="query"
          type="xsd:string"
          id="afterTime">
      <doc xml:lang="en" title="After Time">
         The "afterTime" query parameter specifies that only items
         modified after this time should be returned.  The format 
         of this parameter should be ISO 8601.  You can find a 
         reference at <xhtml:a 
             href="http://www.w3.org/TR/NOTE-datetime">
             http://www.w3.org/TR/NOTE-datetime</xhtml:a>.  The current
         versions accepted are complete date (YYYY-MM-DD) and 
         complete date plus hours, minutes and seconds UTC  
         (YYYY-MM-DDThh:mm:ssZ) where:<xhtml:br />
         <xhtml:span class="iso8601">
             YYYY = four-digit year<xhtml:br />
             MM = two-digit month (01=January, etc.)<xhtml:br />
             DD = two-digit day of month<xhtml:br />
             hh = two digits of hour (00 - 23)<xhtml:br />
             mm = two digits of minute (00 - 59)<xhtml:br />
             ss = two digits of second (00 - 59)<xhtml:br />
         </xhtml:span>
         For January 15, 2009 at 3:18pm (GMT), you could use the 
         complete date format and the result would be 
         2009-01-15T15:18:00Z.  If you just want to specify the 
         complete date, use 2009-01-15.
      </doc>
   </param>
   
   <param name="bbox"
          required="false"
          style="query"
          type="xsd:string"
          id="bbox">
      <doc xml:lang="en" title="Bounding box">
         The "bbox" parameter specifies the bounding box of the uploaded data 
         in the format minX,minY,maxX,maxY
      </doc>
   </param>

   <param name="beforeTime" 
          required="false" 
          style="query"
          type="xsd:string"
          id="beforeTime">
      <doc xml:lang="en" title="Before Time">
         The "beforeTime" query parameter specifies that only items
         modified before this time should be returned.  The format 
         of this parameter should be ISO 8601.  You can find a 
         reference at <xhtml:a 
             href="http://www.w3.org/TR/NOTE-datetime">
             http://www.w3.org/TR/NOTE-datetime</xhtml:a>.  The current
         versions accepted are complete date (YYYY-MM-DD) and 
         complete date plus hours, minutes and seconds UTC  
         (YYYY-MM-DDThh:mm:ssZ) where:<xhtml:br />
         <xhtml:span class="iso8601">
            YYYY = four-digit year<xhtml:br />
            MM = two-digit month (01=January, etc.)<xhtml:br />
            DD = two-digit day of month<xhtml:br />
            hh = two digits of hour (00 - 23)<xhtml:br />
            mm = two digits of minute (00 - 59)<xhtml:br />
            ss = two digits of second (00 - 59)<xhtml:br />
         </xhtml:span>
         For January 15, 2009 at 3:18pm (GMT), you could use the 
         complete date format and the result would be 
         2009-01-15T15:18:00Z.  If you just want to specify the 
         complete date, use 2009-01-15.
      </doc>
   </param>

   <param name="dataFormat"
          required="true"
          style="query"
          type="xsd:string"
          id="dataFormat">
      <doc xml:lang="en" title="Data Format">
         Data formats for raster data can be found at: 
         http://www.gdal.org/formats_list.html,
         
         For vector data:
         http://www.gdal.org/ogr/ogr_formats.html
      </doc>
   </param>

   <param name="description"
          required="false"
          style="query"
          type="xsd:string"
          id="description">
      <doc xml:lang="en" title="Layer Description">
         The "description" query parameter is the description of the object. 
         This can be used to provide additional explanation of the data.
      </doc>
   </param>

   <param name="email"
          required="false"
          style="query"
          type="xsd:string"
          id="email">
      <doc xml:lang="en" title="Email">
         The "email" query parameter associates an email address with this 
         object that will be notified when certain jobs complete.
      </doc>
   </param>

   <param name="endDate"
          required="false"
          style="query"
          type="xsd:string"
          id="endDate">
      <doc xml:lang="en" title="End Date">
         The "endDate" query parameter specifies the end of the date range that 
         the object values were measured.  The format of this parameter should 
         be ISO 8601.  You can find a reference at <xhtml:a 
            href="http://www.w3.org/TR/NOTE-datetime">
            http://www.w3.org/TR/NOTE-datetime</xhtml:a>.  The current versions 
         accepted are complete date (YYYY-MM-DD) and complete date plus hours, 
         minutes and seconds UTC  
         (YYYY-MM-DDThh:mm:ssZ) where:<xhtml:br />
         <xhtml:span class="iso8601">
            YYYY = four-digit year<xhtml:br />
            MM = two-digit month (01=January, etc.)<xhtml:br />
            DD = two-digit day of month<xhtml:br />
            hh = two digits of hour (00 - 23)<xhtml:br />
            mm = two digits of minute (00 - 59)<xhtml:br />
            ss = two digits of second (00 - 59)<xhtml:br />
         </xhtml:span>
         For January 15, 2009 at 3:18pm (GMT), you could use the complete date 
         format and the result would be 2009-01-15T15:18:00Z.  If you just want 
         to specify the complete date, use 2009-01-15.
      </doc>
   </param>

   <param name="epsgcode"
          required="true"
          style="query"
          type="xsd:string"
          id="epsgCode">
      <doc xml:lang="en" title="EPSG Code">
         The "epsgcode" query parameter specifies the EPSG code of the 
         map projection performed on the object.  A list of EPSG codes can be
         found at: 
         <xhtml:a href="http://spatialreference.org/ref/epsg/">
            http://spatialreference.org/ref/epsg/
         </xhtml:a>
      </doc>
   </param>

   <param name="fullObjects"
          required="false"
          style="query"
          type="xsd:integer"
          id="fullObjects">
      <doc xml:lang="en" title="List full objects">
         The fullObjects query parameter should be set to 1 to return full
         Lifemapper objects in the listing response instead of the smaller
         list objects.  This can potentially greatly increase the size of the
         response and should only be used if necessary.
      </doc>
   </param>

   <param name="grandparentId" 
      required="true" 
      style="template" 
      type="xsd:string"
      id="grandparentId">
      <doc xml:lang="en" title="Grandparent ID">
         The grandparentId parameter should be set to the id of the grandparent 
         of the item to be returned.
      </doc>
   </param>

   <param name="interface" 
          required="true" 
          style="template" 
          type="xsd:string"
          id="listInterface">
      <doc xml:lang="en" title="Interface Parameter">
         The interface parameter specifies what interface the list of 
         experiments should be returned in.
      </doc>
      <option value="atom" mediaType="application/atom+xml">
         <doc xml:lang="en" title="Atom Interface">
            Setting the interface parameter to "atom" will set the
            response to return an ATOM feed.
         </doc>
      </option>
      <option value="html" mediaType="text/html">
         <doc xml:lang="en" title="HTML interface">
            Setting the interface parameter to "html" will set the response 
            to return an XML document that may be transformed to HTML 
            depending on your client.
         </doc>
      </option>
      <option value="json" mediaType="applicatoin/json">
         <doc xml:lang="en" title="Json Interface">
            Setting the interface parameter to "json" will set the
            response to return a JSON object.
         </doc>
      </option>
      <option value="xml" mediaType="application/xml">
         <doc xml:lang="en" title="Xml Interface">
            Setting the interface parameter to "xml" will set the
            response to return an XML document.
         </doc>
      </option>
   </param>
        
   <param name="isCategorical"
          required="false"
          style="query"
          type="xsd:boolean"
          id="isCategorical">
      <doc xml:lang="en" title="Is Categorical">
         Indicates if the layer contains categorical data.
      </doc>
   </param>

   <param name="itemId" 
          required="true" 
          style="template" 
          type="xsd:string"
          id="itemId">
      <doc xml:lang="en" title="Item ID">
         The itemId parameter should be set to the id of the item to be 
         returned.
      </doc>
   </param>

   <param name="keyword" 
          repeating="true" 
          required="false"
          style="query" 
          type="xsd:string"
          id="keyword">
      <doc xml:lang="en" title="Keyword">
         The "keyword" query parameter specifies a keyword to be associated 
         with an object.  This is a repeatable parameter, meaning that you can 
         specify multiple keywords for an object by appending another 
         "keyword=" to the url.
      </doc>
   </param>

   <param name="layerId"
          required="false"
          style="query"
          type="xsd:string"
          id="queryLayerId">
      <doc xml:lang="en" title="Layer Id">
         The "layerId" query parameter indicates that only items with the 
         specified layer id should be returned.
      </doc>
   </param>

   <param name="layerName"
      required="false"
      style="query"
      type="xsd:string"
      id="queryLayerName">
      <doc xml:lang="en" title="Layer Name">
         The "layerName" query parameter indicates that only items with the 
         specified layer name should be returned.
      </doc>
   </param>
   
   <param name="layerType"
          required="true"
          style="query"
          type="xsd:string"
          id="layerType">
      <doc xml:lang="en" title="Layer Type">
         The "layerType" query parameter is a text code indicating the type of 
         layer this is.  This is used to determine what other layers it matches 
         up against.
      </doc>
   </param>

   <param name="layerUrl"
          required="false"
          style="query"
          type="xsd:string"
          id="layerUrl">
      <doc xml:lang="en" title="Layer URL">
         The "layerUrl" query parameter specifies the web-accessable location 
         of the layer content to be uploaded.  It must be provided if the 
         layer content is not included in the post request.
      </doc>
   </param>

   <param name="mapUnits"
      required="false"
      style="query"
      type="xsd:string"
      id="mapUnits">
      <doc xml:lang="en" title="Map Units">
         The "mapUnits" query parameter specifies the units used when 
         specifiying the size of each cell.  Common values are dd (for decimal 
         degrees) or m (for meters).
      </doc>
   </param>

   <param name="name"
          required="true"
          style="query"
          type="xsd:string"
          id="name">
      <doc xml:lang="en" title="Object Name">
         The "name" query parameter sets the name to be used for the object
      </doc>
   </param>

   <param name="name"
          required="true"
          style="query"
          type="xsd:string"
          id="layerName">
      <doc xml:lang="en" title="Layer Name">
         The "name" query parameter sets the name to be used for the layer
      </doc>
   </param>

   <param name="page" 
          default="0" 
          required="false" 
          style="query"
          type="xsd:integer"
          id="page">
      <doc xml:lang="en" title="Page">
         The "page" query parameter specifies the number of the 
         page of results to return.  Results will be paged based
         on the perPage parameter.  Page number start with zero so 
         the first time a result set is visited page=0 should be 
         used.  The response will contain urls for the first, 
         last, and (when applicable) previous and next pages of 
         results.<xhtml:br />
         Results returned will be the records: [page * perPage] to
         [((page + 1) * perPage) -1].
      </doc>
   </param>
    
   <param name="parentId" 
      required="true" 
      style="template" 
      type="xsd:string"
      id="parentId">
      <doc xml:lang="en" title="Parent ID">
         The parentId parameter should be set to the id of the parent of the 
         item to be returned.
      </doc>
   </param>
   
   <param name="perPage" 
          default="100" 
          required="false" 
          style="query"
          type="xsd:integer"
          id="perPage">
      <doc xml:lang="en" title="Per Page">
         The "perPage" query parameter specifies the number of  
         results to return per page.  If this parameter is not 
         specified, 100 results will be returned per page. The 
         maximum number of results per page is 100.
      </doc>
   </param>

   <param name="public"
          required="false"
          style="query"
          type="xsd:integer"
          id="public">
      <doc xml:lang="en" title="Public Results">
         The "public" query parameter is used to indicate that public objects
         should be returned while a user is logged in.  Use the value 1 to 
         return public items, a value of 0 will return user items.
      </doc>
   </param>

   <param name="raster"
          required="false"
          style="query"
          type="xsd:integer"
          id="isRaster">
      <doc xml:lang="en" title="Is Raster?">
         The "raster" query parameter is used to indicate that the data being 
         uploaded is raster data.  To do this, set the value of this parameter
         to 1.
      </doc>
   </param>

   <param name="resolution"
          required="false"
          style="query"
          type="xsd:string"
          id="resolution">
      <doc xml:lang="en" title="Scenario Resolution">
         The "resolution" query parameter sets the resolution for the object.
      </doc>
   </param>

   <param name="startDate"
          required="false"
          style="query"
          type="xsd:string"
          id="startDate">
      <doc xml:lang="en" title="Layer Start Date">
         The "startDate" query parameter specifies the start of the date range 
         that the object values were measured.  The format of this parameter 
         should be ISO 8601.  You can find a reference at <xhtml:a 
            href="http://www.w3.org/TR/NOTE-datetime">
            http://www.w3.org/TR/NOTE-datetime</xhtml:a>.  The current versions 
         accepted are complete date (YYYY-MM-DD) and complete date plus hours, 
         minutes and seconds UTC (YYYY-MM-DDThh:mm:ssZ) where:<xhtml:br />
         <xhtml:span class="iso8601">
            YYYY = four-digit year<xhtml:br />
            MM = two-digit month (01=January, etc.)<xhtml:br />
            DD = two-digit day of month<xhtml:br />
            hh = two digits of hour (00 - 23)<xhtml:br />
            mm = two digits of minute (00 - 59)<xhtml:br />
            ss = two digits of second (00 - 59)<xhtml:br />
         </xhtml:span>
         For January 15, 2009 at 3:18pm (GMT), you could use the complete date 
         format and the result would be 2009-01-15T15:18:00Z.  If you just want 
         to specify the complete date, use 2009-01-15.
      </doc>
   </param>
   
   <param name="status" 
          required="false" 
          style="query" 
          type="xsd:integer"
          id="status">
      <doc xml:lang="en" title="Status">
         The "status" query parameter limits the number of items returned to
         those that match that status.  The common status to use is 35 
         indicating that the job is complete.  Anything less than that 
         indicates that the job is still in process and anything greater 
         than 1000 indicates an error.
      </doc>
   </param>

   <param name="title"
          required="true"
          style="query"
          type="xsd:string"
          id="title">
      <doc xml:lang="en" title="Item Title">
         The "title" query parameter sets the title to be used for the object.
      </doc>
   </param>
   
   <param name="units"
          required="true"
          style="query"
          type="xsd:string"
          id="cellUnits">
      <doc xml:lang="en" title="Cell Units">
         The "units" query parameter specifies the units used when specifiying 
         the size of each cell.  Common values are dd (for decimal degrees) or 
         m (for meters).
      </doc>
   </param>

   <param name="valueAttribute"
          required="true"
          style="query"
          type="xsd:string"
          id="valueAttribute">
      <doc xml:lang="en" title="Value Attribute">
         The "valueAttribute" query paramter specifies the attribute of the 
         layer that should be considered the attribute indicating value.  This
         will be an attribute name in a shapefile for vector data or "pixel" 
         for a raster.
      </doc>
   </param>

   <param name="valUnits"
          required="true"
          style="query"
          type="xsd:string"
          id="valUnits">
      <doc xml:lang="en" title="Object Value Units">
         The "valUnits" query parameter indicates the units for the value in 
         each cell.  For example, if your object contains temperature data, 
         this might be set to "degrees celsius".
      </doc>
   </param>

   <param name="vector"
      required="false"
      style="query"
      type="xsd:integer"
      id="isVector">
      <doc xml:lang="en" title="Is Vector?">
         The "vector" query parameter is used to indicate that the data being 
         uploaded is vector data.  To do this, set the value of this parameter
         to 1.
      </doc>
   </param>
   
   <!-- Representations -->
   <representation id="asciiRepresentation"
                   mediaType="text/plain">
      <doc xml:lang="en" title="Layer Raster">
         The content is a raster file in ASCII Grid format.
      </doc>
   </representation>
   
   <representation id="atomRepresentation" mediaType="application/atom+xml">
      <doc xml:lang="en" title="ATOM Response">
         If the interface template parameter is set to "atom" an 
         ATOM feed will be returned.  The content-type of the ATOM
         feed is application/atom+xml.
      </doc>
   </representation>

   <representation id="csvRepresentation" mediaType="text/csv">
      <doc xml:lang="en" title="CSV Response">
         If the interface template parameter is set to "csv" comma-separated 
         values will be returned.  The content-type of the CSV response is 
         text/csv.
      </doc>
   </representation>

   <representation id="emlRepresentation" mediaType="application/xml">
      <doc xml:lang="en" title="EML Response">
         If the interface template parameter is set to "eml", Ecological 
         Metadata Language will be returned in the response.
      </doc>
   </representation>

   <representation id="htmlRepresentation" 
                   mediaType="text/html">
      <doc xml:lang="en" title="Lifemapper HTML Response">
         If the interface template parameter is set to "html" an XML
         document will be returned.  Depending on your client, this may be 
         transformed into an HTML document.
      </doc>
   </representation>

   <representation id="jsonRepresentation" mediaType="application/json">
      <doc xml:lang="en" title="JSON Response">
         If the interface template parameter is set to "json" a 
         JSON object will be returned.  The content-type of the 
         JSON object is application/json.
      </doc>
   </representation>

   <representation id="kmlRepresentation"
                   mediaType="application/vnd.google-earth.kml+xml">
      <doc xml:lang="en" title="KML Response">
         If the interface template parameter is set to "kml" a KML
         document will be returned.  The content-type of the KML
         document is application/vnd.google-earth.kml+xml.
      </doc>
   </representation>

   <representation id="lmXmlRequestRepresentation"
                   element="lm:RequestType"
                   mediaType="application/xml">
      <doc xml:lang="en" title="XML Request">
         The XML body of the request should be a requestType element defined 
         at: <xhtml:a href="http://lifemapper.org/schemas/serviceRequest.xsd">
            http://lifemapper.org/schemas/serviceRequest.xsd
         </xhtml:a>.  The parameters element should contain all of the 
         parameters required for the experiment.
      </doc>
   </representation>
   
   <representation id="lmXmlRepresentation" 
                   element="lm:ResponseType"
                   mediaType="application/xml">
      <doc xml:lang="en" title="Lifemapper XML Response">
         If the interface template parameter is set to "xml" an XML
         document will be returned.  The content-type of the XML
         document is application/xml.  The root element of the 
         response is lm:ResponseType defined at: 
         <xhtml:a href="/schemas/serviceResponse.xsd">
            http://lifemapper.org/schemas/serviceResponse.xsd
         </xhtml:a>
      </doc>
   </representation>
   
   <representation id="plainTextRepresentation"
      mediaType="text/plain">
      <doc xml:lang="en" title="Plain Text Response">
         The content is plain text.
      </doc>
   </representation>
   
   <representation id="shapefileRepresentation"
                   mediaType="applization/x-gzip">
      <doc xml:lang="en" title="Shapefile">
         The content is a vector file in zipped Shapefile format.
      </doc>
   </representation>
    
   <representation id="tiffRepresentation"
                   mediaType="image/tiff">
      <doc xml:lang="en" title="Layer Raster">
         The content is a raster file in GeoTiff format.
      </doc>
   </representation>

   <representation id="xmlRepresentation"
      mediaType="application/xml">
      <doc xml:lang="en" title="XML Response">
         The content is an XML document.
      </doc>
   </representation>
   
   <representation id="http400Representation" mediaType="text/html">
      <doc xml:lang="en" title="Bad Request">
         If the post request does not include all of the required 
         parameters, or if any of the parameters are out of range, an 
         HTTP 400 error (Bad Request) will be returned.  The error 
         document will be returned as an HTML page.
      </doc>
   </representation>
   
   <representation id="http403Representation" mediaType="text/html">
      <doc xml:lang="en" title="Not Authenticated">
         If a HTTP 403 error (Not Authenticated) is returned, the currently 
         logged in user (or anonymous) does not have access to the requested 
         resource.
      </doc>
   </representation>
    
   <representation id="http404Representation" mediaType="text/html">
      <doc xml:lang="en" title="Not Found">
         If a HTTP 404 error (Not Found) is returned, the resource 
         requested does not exist. 
      </doc>
   </representation>

   <!-- Resource Types -->
   <resource_type id="getSubObjectResource">
      <doc xml:lang="en" title="Get Sub Object">
         Retrieving a sub object from any service returns that object in one of 
         the meta interfaces available (ATOM, HTML, JSON, XML).
      </doc>
      <param href="#listInterface" />
      <method name="GET" id="getSubObject">
         <doc xml:lang="en" title="Get Sub Object">
            The only action available from the sub object end-point gets that
            sub object in the desired format.
         </doc>
         <request>
            <doc xml:lang="en" title="Get Sub Object Request">
               The request for this service is a simple HTTP GET.  It does not
               take any additional query parameters.
            </doc>
         </request>
         <response>
            <doc xml:lang="en" title="Sub Object Response">
               The services response can return an ATOM feed, JSON object,
               or XML document based on the value of the interface template
               parameter.
            </doc>
            <representation href="#atomRepresentation" />
            <representation href="#htmlRepresentation" />
            <representation href="#jsonRepresentation" />
            <representation href="#lmXmlRepresentation" />
         </response>
      </method>
   </resource_type>
   
   <resource_type id="serviceListResource">
      <doc xml:lang="en" title="Base Services Resource">
         If you do not specify a specific service end-point, a list of 
         available services will be returned.  The list can be returned as
         an ATOM feed, a JSON object, or XML.
      </doc>
      <param href="#listInterface" />
      <method name="GET" id="listServices">
         <doc xml:lang="en" title="List Available Lifemapper Services">
            The only action available from the base service end-point lists
            the available services.
         </doc>
         <request>
            <doc xml:lang="en" title="List Service Request">
               The request for this service is a simple HTTP GET.  It does 
               not take any additional query parameters.
            </doc>
         </request>
         <response>
            <doc xml:lang="en" title="List Service Response">
               The services response can return an ATOM feed, JSON object,
               or XML document based on the value of the interface template
               parameter.
            </doc>
            <representation href="#atomRepresentation" />
            <representation href="#htmlRepresentation" />
            <representation href="#jsonRepresentation" />
            <representation href="#lmXmlRepresentation" />
         </response>
      </method>
   </resource_type>
</application>